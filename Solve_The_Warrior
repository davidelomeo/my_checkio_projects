class Warrior:
    health = 50
    attack = 5
    if health <= 0:
        is_alive = False
    else:
        is_alive = True
    pass

class Knight(Warrior):
    health = 50
    attack = 7
    is_alive = Warrior.is_alive
    pass

def fight(unit_1, unit_2):
    turn = 0
    
    while (unit_1.health or unit_2.health) > 0:
        if turn % 2 == 0:
            unit_2.health = unit_2.health - unit_1.attack
            turn += 1
        else:
            unit_1.health = unit_1.health - unit_2.attack
            turn += 1

        if unit_1.health <= 0:
            unit_1.is_alive = False
            return False
        elif unit_2.health <= 0:
            unit_2.is_alive = False
            return True

if __name__ == '__main__':
    #These "asserts" using only for self-checking and not necessary for auto-testing

    chuck = Warrior()
    bruce = Warrior()
    carl = Knight()
    dave = Warrior()
    mark = Warrior()

    assert fight(chuck, bruce) == True
    assert fight(dave, carl) == False
    assert chuck.is_alive == True
    assert bruce.is_alive == False
    assert carl.is_alive == True
    assert dave.is_alive == False
    assert fight(carl, mark) == False
    assert carl.is_alive == False

    print("Coding complete? Let's try tests!")


